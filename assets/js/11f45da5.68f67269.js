"use strict";(self.webpackChunkavdan_os_docs=self.webpackChunkavdan_os_docs||[]).push([[734],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>m});var a=t(7294);function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,i=function(e,n){if(null==e)return{};var t,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)t=r[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=a.createContext({}),c=function(e){var n=a.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},p=function(e){var n=c(e.components);return a.createElement(l.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},u=a.forwardRef((function(e,n){var t=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=c(t),m=i,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||r;return t?a.createElement(g,o(o({ref:n},p),{},{components:t})):a.createElement(g,o({ref:n},p))}));function m(e,n){var t=arguments,i=n&&n.mdxType;if("string"==typeof e||i){var r=t.length,o=new Array(r);o[0]=u;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var c=2;c<r;c++)o[c]=t[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}u.displayName="MDXCreateElement"},4736:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=t(7462),i=(t(7294),t(3905));const r={sidebar_position:1},o="C Code Guidelines",s={unversionedId:"contributing/development/code_guidelines/c_guidelines",id:"contributing/development/code_guidelines/c_guidelines",title:"C Code Guidelines",description:"\ud83d\udea7 Under Construction \ud83d\udea7",source:"@site/docs/avdanos/contributing/development/code_guidelines/c_guidelines.mdx",sourceDirName:"contributing/development/code_guidelines",slug:"/contributing/development/code_guidelines/c_guidelines",permalink:"/docs/contributing/development/code_guidelines/c_guidelines",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Code Guidelines",permalink:"/docs/category/code-guidelines"},next:{title:"C++ Code Guidelines",permalink:"/docs/contributing/development/code_guidelines/cpp_guidelines"}},l={},c=[{value:"Names",id:"names",level:2},{value:"Use pascal case for structs and snake case for variables and functions.",id:"use-pascal-case-for-structs-and-snake-case-for-variables-and-functions",level:4},{value:"Use full words, except when the variable name is too long.",id:"use-full-words-except-when-the-variable-name-is-too-long",level:4},{value:"Use descriptive names in functions.",id:"use-descriptive-names-in-functions",level:4},{value:"Leave useless variable names out of function declarations.",id:"leave-useless-variable-names-out-of-function-declarations",level:4},{value:"Other punctuation",id:"other-punctuation",level:2},{value:"Use <code>#pragma once</code> for header files. Why? Because <code>#pragma once</code> is less prone to making mistakes and it is less code to type.",id:"use-pragma-once-for-header-files-why-because-pragma-once-is-less-prone-to-making-mistakes-and-it-is-less-code-to-type",level:4},{value:"When writing a function, or a for cycle, don&#39;t write curly braces at the beginning of a new line.",id:"when-writing-a-function-or-a-for-cycle-dont-write-curly-braces-at-the-beginning-of-a-new-line",level:4},{value:"Statements",id:"statements",level:2},{value:"Use conditional operators instead of if else statements.",id:"use-conditional-operators-instead-of-if-else-statements",level:4},{value:"When the statement is too long, go to a new line.",id:"when-the-statement-is-too-long-go-to-a-new-line",level:4},{value:"Types",id:"types",level:2},{value:"Delete <code>int</code> when using <code>unsigned</code> modifier, and don&#39;t use <code>signed</code> modifier.",id:"delete-int-when-using-unsigned-modifier-and-dont-use-signed-modifier",level:4}],p={toc:c};function d(e){let{components:n,...t}=e;return(0,i.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"c-code-guidelines"},"C Code Guidelines"),(0,i.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("h3",{parentName:"div",id:"-under-construction-"},"\ud83d\udea7 Under Construction \ud83d\udea7"),(0,i.kt)("p",{parentName:"div"},"This section of documentation is still under construction \u2014 it is not formalized and may change.\nHelp contribute to it on our ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Avdan-OS/docsite/docs/meta/contributing/documentation.md"},"GitHub"),"."))),(0,i.kt)("p",null,"Hello, developers!"),(0,i.kt)("p",null,"As with any project, the code readibility is very important to keep it organized.\nThis section will go the through the principles and guidelines of our code style."),(0,i.kt)("h2",{id:"names"},"Names"),(0,i.kt)("h4",{id:"use-pascal-case-for-structs-and-snake-case-for-variables-and-functions"},"Use pascal case for structs and snake case for variables and functions."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Do \u2705"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"struct Example;\nsize_t example_t;\nvoid example_func();\nint example_var;\nconst EXAMPLE_VAR;\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Don't \u274c"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"struct example;\nsize_t exampleT; // size_t exampleSize;\nvoid ExampleFunc(); // void exampleFUNC();\nint exampleVar;\nconst example_var;\n")),(0,i.kt)("h4",{id:"use-full-words-except-when-the-variable-name-is-too-long"},"Use full words, except when the variable name is too long."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Do \u2705"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"int my_var;\nint length;\nchar width;\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Don't \u274c"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"int my_variable;\nint len;\nchar width;\n")),(0,i.kt)("h4",{id:"use-descriptive-names-in-functions"},"Use descriptive names in functions."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Do \u2705"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"char convert_to_ascii(int);\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Don't \u274c"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"char to_ascii(int);\n")),(0,i.kt)("h4",{id:"leave-useless-variable-names-out-of-function-declarations"},"Leave useless variable names out of function declarations."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Do \u2705"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"char my_character(char);\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Don't \u274c"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"char my_character(char character);\n")),(0,i.kt)("h2",{id:"other-punctuation"},"Other punctuation"),(0,i.kt)("h4",{id:"use-pragma-once-for-header-files-why-because-pragma-once-is-less-prone-to-making-mistakes-and-it-is-less-code-to-type"},"Use ",(0,i.kt)("inlineCode",{parentName:"h4"},"#pragma once")," for header files. Why? Because ",(0,i.kt)("inlineCode",{parentName:"h4"},"#pragma once")," is less prone to making mistakes and it is less code to type."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Do \u2705"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"#pragma once\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Don't \u274c"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"#ifndef FILE_H\n#define FILE_H\n\n/*\n * code\n*/\n\n#endif // FILE_H\n")),(0,i.kt)("h4",{id:"when-writing-a-function-or-a-for-cycle-dont-write-curly-braces-at-the-beginning-of-a-new-line"},"When writing a function, or a for cycle, don't write curly braces at the beginning of a new line."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Do \u2705"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},'\nint my_function(int a, int b) {\n    // code\n}\n\nfor (int i = 0; i <= 10; i++) {\n    printf("%d\\n", i);\n}\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Don't \u274c"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},'int my_function(int a, int b)\n{\n    // code\n}\n\nfor (int i = 0; i <= 10; i++)\n{\n    printf("%d\\n", i);\n}\n')),(0,i.kt)("h2",{id:"statements"},"Statements"),(0,i.kt)("h4",{id:"use-conditional-operators-instead-of-if-else-statements"},"Use conditional operators instead of if else statements."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Do \u2705"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},'my_variable % 2 == 0 ? printf("even") : printf("odd");\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Don't \u274c"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},'if (my_variable % 2 == 0) {\n    printf("even");\n} else {\n    printf("odd");\n}\n')),(0,i.kt)("h4",{id:"when-the-statement-is-too-long-go-to-a-new-line"},"When the statement is too long, go to a new line."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Do \u2705"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},'my_variable  % 2 == 0 && my_variable2 % 4 == 0 ? printf("foo") : \\\nmy_variable3 % 6 == 0 && my_variable4 % 8 == 0 ? printf("fee") : printf("fuu");\n')),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Don't \u274c"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},'my_variable  % 2 == 0 && my_variable2 % 4 == 0 ? printf("foo") : my_variable3 % 6 == 0 && my_variable4 % 8 == 0 ? printf("fee") : printf("fuu");\n')),(0,i.kt)("h2",{id:"types"},"Types"),(0,i.kt)("h4",{id:"delete-int-when-using-unsigned-modifier-and-dont-use-signed-modifier"},"Delete ",(0,i.kt)("inlineCode",{parentName:"h4"},"int")," when using ",(0,i.kt)("inlineCode",{parentName:"h4"},"unsigned")," modifier, and don't use ",(0,i.kt)("inlineCode",{parentName:"h4"},"signed")," modifier."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Do \u2705"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"unsigned my_variable;\nint my_variable2;\n")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Don't \u274c"),":"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"unsigned int a;\nsigned b;\nsigned int c;\n")))}d.isMDXComponent=!0}}]);